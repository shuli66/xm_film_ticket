services:
  nginx: # 服务名称，用户自定义
    image: nginx:latest  # 镜像版本
    ports:
      - 80:80  # 暴露端口
    volumes: # 挂载
      - /root/nginx/html:/usr/share/nginx/html
      - /root/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /root/nginx/files:/usr/share/nginx/files  # 共享文件目录
    privileged: true # 这个必须要，解决nginx的文件调用的权限问题
  mysql:
    image: mysql:8.0
    ports:
      - 3306:3306  # 修改宿主机端口为13306，避免与现有MySQL端口冲突
    environment: # 指定用户root的密码
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=xm_film_ticket
    command: --default-authentication-plugin=mysql_native_password  # 使用旧的认证插件
    volumes:
      - mysql_data:/var/lib/mysql  # 持久化MySQL数据
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server --appendonly yes  # 启用AOF持久化
    volumes:
      - redis_data:/data  # 持久化Redis数据
  springboot:
    image: springboot:latest
    build: . # 表示以当前目录下的Dockerfile开始构建镜像
    ports:
      - 9090:9090
    volumes:
      - /root/nginx/files:/usr/share/nginx/files  # 文件上传目录
      - /root/java_project:/app/logs  # 日志目录挂载
    environment:
      - SPRING_PROFILES_ACTIVE=pro  # 使用生产环境配置
      - JAVA_OPTS=-Xmx512m -Xms256m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dlogging.level.org.mybatis=ERROR -Dlogging.level.org.springframework=ERROR
    depends_on: # 依赖与mysql、redis，其实可以不填，默认已经表示可以
      - mysql
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"  # 每个日志文件最大大小
        max-file: "3"    # 最多保留3个日志文件

# 定义持久化卷
volumes:
  mysql_data:  # MySQL数据持久化
  redis_data:  # Redis数据持久化