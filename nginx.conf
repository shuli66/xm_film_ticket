user  root;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 20M;
    
    # 日志格式定义
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;
    
    # CORS配置 - 允许所有来源
    map $http_origin $cors_origin {
        default "*";
        "~^http://8\.130\.169\.157(:[0-9]+)?$" "$http_origin";
        "~^http://localhost(:[0-9]+)?$" "$http_origin";
    }
    
    # 替换响应中的localhost URL
    sub_filter 'http://localhost:9090' 'http://8.130.169.157';
    sub_filter_once off;
    sub_filter_types application/json text/plain;
    
    server {
        listen       80;
        server_name  8.130.169.157;
        
        # 前端应用配置
        location / {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index  index.html index.htm;
            
            # 添加X-Forwarded-Host头
            proxy_set_header X-Forwarded-Host $host;
            # 添加X-Forwarded-Proto头
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 处理/assets/路径的静态资源
        location ^~ /assets/ {
            root   /usr/share/nginx/html;
            
            # 添加调试信息头，帮助排查静态资源问题
            add_header X-Debug-Path $request_filename always;
            add_header X-Original-URI $request_uri always;
            
            # 设置正确的缓存控制
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
            
            # 处理URL编码问题
            proxy_set_header Accept-Encoding "";
            
            # CORS配置
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            
            # 调试日志
            log_not_found on;
            access_log /var/log/nginx/assets_access.log main;
            error_log /var/log/nginx/assets_error.log debug;
        }
        
        # 处理静态文件 - 修正了alias路径，明确文件处理规则
        location ^~ /files/download/ {
            alias /usr/share/nginx/files/;  # 添加末尾斜杠
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            
            # 添加调试信息头，帮助排查静态资源问题
            add_header X-Debug-Path $request_filename always;
            add_header X-Original-URI $request_uri always;
            
            # 设置正确的MIME类型
            include mime.types;
            
            # 解决URL中包含特殊字符的问题
            proxy_set_header Accept-Encoding "";
            
            # 调试日志
            log_not_found on;
            access_log /var/log/nginx/files_access.log main;
            error_log /var/log/nginx/files_error.log debug;
        }
        
        # 图片文件缓存 - 单独的location
        location ~* \.(jpg|jpeg|png|gif|ico|webp)$ {
            root /usr/share/nginx/files/;
            expires 7d;
            add_header Cache-Control "public, max-age=604800, immutable";
            try_files $uri =404;
        }
        
        # 文件上传处理
        location = /files/upload {
            # 文件上传请求代理到后端
            client_max_body_size 20M;
            
            # OPTIONS请求处理
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # 文件上传处理
            proxy_pass http://8.130.169.157:9090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 强制替换响应中的localhost
            sub_filter 'http://localhost:9090' 'http://8.130.169.157';
            sub_filter_once off;
            
            # 文件上传超时设置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # CORS头
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
        }
        
        # 通用静态文件处理
        location ^~ /files/ {
            alias /usr/share/nginx/files/;
            
            # 明确添加CORS头
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS, POST' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            
            # 添加X-Original-Host头，避免前端请求使用localhost
            add_header X-Original-Host "8.130.169.157" always;
            
            # 调试日志
            access_log /var/log/nginx/files_access.log main;
            error_log /var/log/nginx/files_error.log debug;
        }
        
        # 前端页面处理 - 修复了路径匹配
        location ~ ^/(manager|front)$ {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }
        
        # 为登录页面单独设置规则
        location = /login {
            # 对于GET请求返回前端页面
            error_page 418 = @login_frontend;
            if ($request_method = 'GET') {
                return 418;
            }
            
            # OPTIONS请求处理
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # 登录接口特殊处理
            proxy_pass http://8.130.169.157:9090;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 禁用缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS头
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
        }

        # 处理GET请求的登录页面
        location @login_frontend {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }
        
        # 为注册页面单独设置规则
        location = /register {
            # 对于GET请求返回前端页面
            error_page 418 = @register_frontend;
            if ($request_method = 'GET') {
                return 418;
            }
            
            # OPTIONS请求处理
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # POST请求代理到后端
            proxy_pass http://8.130.169.157:9090;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 禁用缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS头
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
        }

        # 处理GET请求的注册页面
        location @register_frontend {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }
        
        # 管理员相关接口处理
        location ~ ^/(statistics|admin) {
            # OPTIONS请求处理
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # 代理配置
            proxy_pass http://8.130.169.157:9090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 强制替换响应中的localhost
            sub_filter 'http://localhost:9090' 'http://8.130.169.157';
            sub_filter_once off;
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS头
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
        
        # 后端接口代理配置 - 扩展匹配所有API路径
        location ~ ^/(user|film|cinema|show|score|comment|type|area|video|actor|files|alipay|orders|room|collect|notice|api) {
            # OPTIONS请求处理
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # 代理配置
            proxy_pass http://8.130.169.157:9090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 强制替换响应中的localhost
            sub_filter 'http://localhost:9090' 'http://8.130.169.157';
            sub_filter_once off;
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 禁用缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # CORS头
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
        
        # 错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}